--import Colyseus client
local ColyseusClient = require "colyseus.client"

local client
local room
local opponentCards = {}
local gameManager = "/gameManager#gameManager"

-- Connects to the Colyseus server and initializes the game room.
function init(self)
	local BASE_CORE_URL = "wss://ca-yto-4b1a817c.colyseus.cloud:443"
	client = ColyseusClient.new(BASE_CORE_URL)

	client:join_or_create("my_room", {}, handleRoomCreation)
end

-- Callback function to handle the game room creation.
function handleRoomCreation(err, _room)
	if err then
		print("JOIN ERROR: " ..err)
		return
	end

	print("JOIN SUCCESSFUL")
	room = _room

	room:on_message("server-message", function(message)
		print("Server message: " ..message)
	end)

	room:on_message("game-message", handleGameMessage)
end

-- Callback function to handle game messages received from the server.
function handleGameMessage(message)
	print("Game message: " ..message)

	if (message == "draw") then
		opponent_drawhand()
	elseif (message == "drop") then
		opponent_drop()
	end
end

-- Creates an opponent card in the dropzone at the correct position and updates game manager.
function opponent_drop()
	local cardsInDropZone = go.get(gameManager, "cardsPlayed")
	local zPos = go.get(gameManager, "zPosition")
	local p = vmath.vector3(850 + (cardsInDropZone * 50), 547, zPos)

	factory.create("/spawner#opponentCardFactory", p, nil, nil, 0.3)

	go.set(gameManager, "cardsPlayed", (cardsInDropZone + 1))
	go.set(gameManager, "zPosition", (zPos + 0.01))

	local cardsInOpponentHand = go.get(gameManager, "cardsInOpponentHand")

	if cardsInOpponentHand > 0 then
		go.delete(opponentCards[cardsInOpponentHand])
		table.remove(opponentCards, cardsInOpponentHand)
		go.set(gameManager, "cardsInOpponentHand", table.getn(opponentCards))
	end
end

-- Creates opponent cards and updates game manager.
function opponent_drawhand()
	for i = 1,5 do
		local card = factory.create("/spawner#opponentCardBackFactory", vmath.vector3(610 + (i * 50), 1210, 0), nil, nil, 0.3)
		table.insert(opponentCards, card)
		go.set(gameManager, "cardsInOpponentHand", table.getn(opponentCards))
	end
end

-- Sends a message to the server when cards are drawn or played.
function on_message(self, message_id, message, sender)
	if message_id == hash("draw") then
		room:send("game-message", {action="draw", player_id=message.player_id})
		print("Cards drawn by player ", message.player_id)
	elseif message_id == hash("drop") then
		room:send("game-message", {action="drop", player_id=message.player_id, zone=message.zone})
		print("Card dropped by player ", message.player_id)
	end
end