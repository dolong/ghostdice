local current_flipbooks = {}
local player_1_current_flipbooks = {}
local player_2_current_flipbooks = {}
local preset = false  -- Tracks if initialization has occurred
local diceModule = require "modules.dice"

function set_flipbook(sprite_id, flipbook, player)
	if (player == 1)  then
		sprite.play_flipbook(sprite_id, flipbook)
		player_1_current_flipbooks[sprite_id] = flipbook
	elseif (player == 2)  then
		sprite.play_flipbook(sprite_id, flipbook)
		player_2_current_flipbooks[sprite_id] = flipbook
	end
end

function get_current_flipbook(sprite_id, player)
	if (player == 1)  then
		return player_1_current_flipbooks[sprite_id]
	elseif (player == 2)  then
		return player_2_current_flipbooks[sprite_id]
	end
end

function initialize()
	-- IF sprite_id == 00, 01, 02, 
	-- 
	-- IF 10, 11, 12,
	-- IF 20, 21, 22
	local sprite_ids = {"00", "01", "02", "10", "11", "12", "20", "21", "22"}
	
	for _, id in ipairs(sprite_ids) do
		local sprite_id = "#" .. id
		-- Initialize the flipbook and update the current_flipbooks table
		set_flipbook(sprite_id, "dice_blank", 1)
		set_flipbook(sprite_id, "dice_blank", 2)
	end
	
	preset = true  -- Mark as initialized
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_image") then
		if not preset then
			initialize()  -- Initialize on first run
		end		
		
		if message.image and message.square then
			local sprite_id = "#" .. message.square
			print (message.player)
			local current_image = get_current_flipbook(sprite_id, message.player)
			print ("current dice is set to: " .. current_image)
			if current_image and current_image ~= message.image then
				print ("Trying to set current dice to: " .. message.image)
				if current_image ~= "dice_blank" then
					sprite.play_flipbook(sprite_id, "poof", message.player)
					print("poofing" ..  sprite_id .. current_image .. message.image)
					diceModule.poof = true
					diceModule.play_poof_sound()
					timer.delay(0.5, false, function()
						set_flipbook(sprite_id, message.image, message.player)
					end)
				else
					sprite.play_flipbook(sprite_id, "dice_select", message.player)
					timer.delay(0.2, false, function()
						set_flipbook(sprite_id, message.image, message.player)
					end)
				end
			end
		end
	end
end
