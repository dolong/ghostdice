local button = require "in.button"
local playersModule = require "modules.player"
local cardDataModule = require "modules.cardData"
local turnActionsModule = require "modules.turnActions"

local function drawCard()
	print("Pressing Draw!")
	turnActionsModule.drawCard()
end

function init(self)
	print("text.gui_script initialized")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("draw_cards") then
		for k = 1, 5 do
			drawCard()
		end
	end
end
-- TODO: Make handleResponse call externalCall.script
local function handleResponse(self, id, response)

	local handSize = 5
	if response.status == 200 then
		local data = json.decode(response.response)
		for i = 1, #data.names do
			local card = {
				name = data.names[i],
				cost = data.costs[i],
				power = data.powers[i],
				-- image = "",
				-- description = ""
			
				-- You can add more attributes if needed
			}
			table.insert(cardDataModule.deck, card)

			-- sends the deck to opponent to add
			msg.post("/client#client", "addOpponentDeck", { player_id = playersModule.get_id(), cardName = data.names[i], cardCost = data.costs[i], cardPower = data.powers[i]})
			end

		

	else
		print("Error: ", response.status)
	end
end


local function callDrawCardsExternal()
	local body = json.encode({cards = 12}) -- encoding data as a JSON string
	local headers = {["Content-Type"] = "application/json"} -- setting content type to json
	http.request("https://eof12vdrp825kui.m.pipedream.net/", "POST", handleResponse, headers, body)
	-- go to handleResponse(self, id, response) next
end
	
--This action loads the json of cards from http request
local function drawCards(self)
	print("Starting a new game!")
	if not pressed then 
		--callDrawCardsExternal()
		--Draw hand
		for k = 1, 5 do
			drawCard()
		end
		
		pressed = true
	end
end

local function assignDeck()
	-- drawCards off screen
end

local function playLand()
	print ("Pressing a location!")

	print("factory creating character")
	local land = factory.create("/spawner#landFactory", vmath.vector3(430 + (1 * 50), 270, 0), nil, {isDraggable = true}, .5)
	msg.post("/client#client", "plant location tile")
end

local function endTurn()
	print ("Pressing End Turn")
	msg.post("/client#client", "end_turn", { player_id = playersModule.get_id() })
	turnActionsModule.endTurn()
end


function init(self)
	button.acquire()
	button.register("drawCard", drawCard)
	button.register("drawCards", drawCards)
	button.register("playLand", playLand)
	button.register("endTurn", endTurn)
end

function final(self)
	button.unregister()
end

function on_input(self, action_id, action)
	button.on_input(action_id, action)
end
